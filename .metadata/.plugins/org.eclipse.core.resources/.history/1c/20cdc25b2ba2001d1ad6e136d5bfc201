package com.example.demo.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.example.demo.domain.MemberVO;
import com.example.demo.service.MemberService;

@Controller
@SessionAttributes("login")
public class MemberController {

	@Autowired
	private MemberService memberService;

	// 로그인
	@RequestMapping(value = "/login", method = RequestMethod.POST)
	@ResponseBody
	public Map<Object, Object> login(@RequestParam("id") String id, @RequestParam("pwd") String pwd,
			HttpSession session, Model model) throws Exception {

		Map<Object, Object> map = new HashMap<Object, Object>();
		MemberVO member = new MemberVO();
		member.setId(id);
		member.setPwd(pwd);

		MemberVO userInfo = memberService.memberLogin(member);

		if (userInfo != null) {
			map.put("login", true);
			map.put("id", userInfo.getId());
			map.put("nickname", userInfo.getNickname());
			session.setAttribute("login", true);
			session.setAttribute("id", userInfo.getId());
			session.setAttribute("nickname", userInfo.getNickname());
		} else {
			map.put("login", false);
		}

		return map;
	}

	// 로그아웃
	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public String logout(HttpSession session) throws Exception {

		session.invalidate();

		return "redirect:/";
	}

	// 아이디 중복체크
	@RequestMapping(value = "/idDuplCheck", method = RequestMethod.GET)
	@ResponseBody
	public Map<Object, Object> idDuplCheck(@RequestParam("id") String id, HttpSession session, Model model)
			throws Exception {

		Map<Object, Object> map = new HashMap<Object, Object>();

		int idDuplCheck = memberService.idDuplCheck(id);

		if (idDuplCheck == 1) {
			map.put("duplId", true);
		} else {
			map.put("duplId", false);
		}

		return map;
	}

	// 회원가입
		@RequestMapping(value = "/signUp", method = RequestMethod.POST)
		@ResponseBody
		public Map<Object, Object> signUp(@RequestParam("id") String id, @RequestParam("pwd") String pwd,
				@RequestParam("nickname") String nickname, HttpSession session, Model model) throws Exception {

			Map<Object, Object> map = new HashMap<Object, Object>();
			MemberVO member = new MemberVO();
			member.setId(id);
			member.setPwd(pwd);
			member.setPwd(nickname);
			member.setReg_date(new Date());

			memberService.signUp(member);

			if (userInfo != null) {
				map.put("login", true);
				map.put("id", userInfo.getId());
				map.put("nickname", userInfo.getNickname());
				session.setAttribute("login", true);
				session.setAttribute("id", userInfo.getId());
				session.setAttribute("nickname", userInfo.getNickname());
			} else {
				map.put("login", false);
			}

			return map;
		}

}
